( module ( "import" "env" "buffer" ( mem "80" ) ) ( "import" "env" "log_i32" ( func "$log_i32" ( param i32 ) ) ) ( "import" "env" "rand_i32" ( func "$rand_i32" ( result i32 ) ) ) ( func ( export "add_all" ) ( param "$start" i32 ) ( param "$count" i32 ) ( result i32 ) ( local "$i" i32 ) ( local "$read_offset" i32 ) ( local "$result" i32 ) ( local "$i" ( i32 "0" ) ) ( "loop" "$addloop" ( "block" "$breakaddloop" ( i32 ( local "$i" ) ( local "$count" ) ) "br_if" "$breakaddloop" ( local "$read_offset" ( i32 ( local "$start" ) ( i32 ( local "$i" ) ( i32 "4" ) ) ) ) ( local "$result" ( i32 ( local "$result" ) ( i32 ( local "$read_offset" ) ) ) ) ( local "$i" ( i32 ( local "$i" ) ( i32 "1" ) ) ) "br" "$addloop" ) ) ( local "$result" ) ) ( func ( export "rand_multiple_of_10" ) ( result i32 ) ( local "$n" i32 ) ( "loop" "$randloop" ( local "$n" ( "call" "$rand_i32" ) ) ( i32 ( i32 ( local "$n" ) ( i32 "10" ) ) ( i32 "0" ) ) "br_if" "$randloop" ) ( local "$n" ) ) ( func ( export "first_power_over_limit" ) ( param "$base" i32 ) ( param "$limit" i32 ) ( result i32 ) ( local "$n" i32 ) ( local "$n" ( i32 "1" ) ) ( "loop" "$powerloop" ( "block" "$breakpowerloop" ( i32 ( local "$n" ) ( local "$limit" ) ) "br_if" "$breakpowerloop" ( local "$n" ( i32 ( local "$n" ) ( local "$base" ) ) ) "br" "$powerloop" ) ) ( local "$n" ) ) )